# Multi-container orchestration
version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:14
    environment:
      POSTGRES_DB: financial_monitor
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password123
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # API Service
  api:
    build: .
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:password123@db:5432/financial_monitor
      - API_ID=${API_ID}
      - API_HASH=${API_HASH}
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    depends_on:
      db:
        condition: service_healthy
    command: ["python", "src/api/main.py"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Streamlit Dashboard
  dashboard:
    build: .
    ports:
      - "8501:8501"
    environment:
      - API_BASE_URL=http://api:8000/api/risk
    volumes:
      - ./data:/app/data
    depends_on:
      - api
    command: ["streamlit", "run", "src/visualization/dashboard.py", "--server.address", "0.0.0.0"]

  # Telegram Scraper (scheduled job)
  scraper:
    build: .
    environment:
      - API_ID=${API_ID}
      - API_HASH=${API_HASH}
    volumes:
      - ./data:/app/data
      - ./src/scraping/channels.txt:/app/channels.txt
    command: ["python", "src/scraping/scraper.py"]
    profiles:
      - scraper  # Only run when explicitly requested

volumes:
  postgres_data:
